@{
    var controllerDto = Model;
    var methodDtos = controllerDto.MethodDtos;
    var moduleNamespace = controllerDto.ModuleNamespace + ".";
}

import { request } from 'umi';

@foreach (var method in methodDtos)
{
    var returnType = method.ReturnType;
    switch (method.ReturnType)
    {
        case "Task":{ returnType = "void"; }break;
    }
<template>
export const @(method.Name)@(controllerDto.Name) = async (@(method.GetParameters(moduleNamespace))): Promise<@Html.Raw(returnType)> => {
  return await request<@(Html.Raw(returnType))>(`${Menu_API}@(method.RouteUrl)`, {
    method: '@(method.RequestMethod.Replace("Http",""))',
    @(method.Parameters.Count > 0? $"data: {method.GetParameterKeys()}":"")
  });
};
</template>
}


